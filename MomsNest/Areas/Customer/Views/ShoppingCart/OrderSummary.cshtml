@model ShoppingCartViewModel

<form id="checkoutForm" method="post">
    <input type="hidden" name="couponCode" id="couponCode" value="@Model.OrderHeader.CouponCode" />
    <br />
    <div class="container">
        <div class="card shadow border-0">

            <div class="card-header bg-secondary bg-gradient text-light ml-0 py-4">
                <div class="row px-4">
                    <div class="col-6">
                        <h3 class="pt-2 text-white">
                            Order Summary
                        </h3>
                    </div>
                    <div class="col-6 text-end">
                        <a asp-action="Index" class="btn btn-outline-danger btn-sm">Back to Cart</a>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="container rounded p-2">
                    <div class="row">
                        <div class="col-12 col-lg-6 pb-4">
                            <div class="row">
                                <h4 class="d-flex justify-content-between align-items-center mb-3">
                                    <span class="text-info">Shipping Details:</span>
                                </h4>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">
                                    <label>Name</label>
                                </div>
                                <div class="col-9">
                                    <input asp-for="OrderHeader.Name" class="form-control" data-address-field="Name" />
                                    <span asp-validation-for="OrderHeader.Name" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">
                                    <label>Phone</label>
                                </div>
                                <div class="col-9">
                                    <input asp-for="OrderHeader.PhoneNumber" class="form-control" data-address-field="PhoneNumber" />
                                    <span asp-validation-for="OrderHeader.PhoneNumber" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">
                                    <label>Street Address</label>
                                </div>
                                <div class="col-9">
                                    <input asp-for="OrderHeader.StreetAddress" class="form-control" data-address-field="StreetAddress" />
                                    <span asp-validation-for="OrderHeader.StreetAddress" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">
                                    <label>City</label>
                                </div>
                                <div class="col-9">
                                    <input asp-for="OrderHeader.City" class="form-control" data-address-field="City" />
                                    <span asp-validation-for="OrderHeader.City" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">
                                    <label>State</label>
                                </div>
                                <div class="col-9">
                                    <input asp-for="OrderHeader.State" class="form-control" data-address-field="State" />
                                    <span asp-validation-for="OrderHeader.State" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">
                                    <label>Postal Code</label>
                                </div>
                                <div class="col-9">
                                    <input asp-for="OrderHeader.PostalCode" class="form-control" data-address-field="PostalCode" />
                                    <span asp-validation-for="OrderHeader.PostalCode" class="text-danger"></span>
                                </div>
                            </div>
                            <hr /> <h3 class="text-center">OR</h3>
                            <div class="row my-1">
                                <div class="col-3">
                                    <label>Previous Addresses:</label>
                                </div>
                                <div class="col-9">
                                    <select id="previousAddressDropdown" class="form-control">
                                        <option value="" selected>Select Previous Address</option>
                                        @{
                                            var uniqueAddresses = new HashSet<string>();
                                            foreach (var address in ViewBag.PreviousAddresses)
                                            {
                                                if (uniqueAddresses.Add(address.Text))
                                                {
                                                    var parts = address.Text.Split('.');
                                                    var serialNumber = parts[0]; // Extract serial number
                                                    var addressText = parts.Length > 1 ? string.Join(".", parts[1..]) : parts[0];
                                                    <option value="@address.Value" data-serial-number="@serialNumber">@address.Text</option>
                                                }
                                            }
                                        }
                                    </select>
                                </div>
                            </div>

                        </div>
                        <div class="col-12 col-lg-5 offset-lg-1">
                            <h4 class="d-flex justify-content-between align-items-center mb-3">
                                <span class="text-info">Order Details:</span>
                            </h4>
                            <ul class="list-group mb-3">
                                @foreach (var details in Model.ShoppingCartList)
                                {
                                    decimal discountAmount = 0; // Initialize discount amount

                                    // Calculate discount amount if an offer is applicable
                                    var applicableOffer = Model.Offers.FirstOrDefault(o =>
                                    (o.Offertype == Offer.OfferType.Product && o.OfferItem == details.Product.ProductName) ||
                                    (o.Offertype == Offer.OfferType.Category && o.OfferItem == details.Product.Category?.Name));

                                    if (applicableOffer != null)
                                    {
                                        
                                        discountAmount = (decimal)applicableOffer.OfferDiscount;


                                    }

                                    <li class="list-group-item d-flex justify-content-between">
                                        <div>
                                            <h6 class="my-0">@details.Product.ProductName  </h6>

                                            <small class="text-muted">Price: @details.Price.ToString("c")</small><br />
                                            <small class="text-muted">Quantity: @details.Count </small><br />
                                            <small class="text-muted">Discount:  @discountAmount.ToString("c")</small><br />



                                        </div>
                                        <div>
                                            <span class="text-muted">@((details.Price * details.Count).ToString("c"))</span>
                                            @if (applicableOffer != null)
                                            {
                                                <br />  <span class="text-success mx-4"> - @discountAmount</span>
                                            }
                                        </div>

                                    </li>



                                }
                                <li class="list-group-item d-flex justify-content-between">
                                    <small class="text-success">Wallet Amount (INR)</small>
                                    <strong class="text-success">@Model.OrderHeader.ApplicationUser.wallet</strong>
                                </li>


                                <li class="list-group-item d-flex justify-content-between bg-light">
                                    <small class="text-info">Total (INR)</small>
                                    <strong id="orderTotal" class="text-info">@Model.OrderHeader.OrderTotal.ToString("c")</strong>
                                </li>
                            </ul>

                            <!-- Coupon Section -->
                            @{
                                var validCoupons = Model.Coupons
                                .Where(c => Model.OrderHeader.OrderTotal >= c.MinimumAmount)
                                .OrderByDescending(c => c.MinimumAmount)
                                .ToList();
                            }

                            @if (validCoupons.Any())
                            {
                                <div class="row my-1">
                                    <div class="col-3">
                                        <label>Coupon:</label>
                                    </div>
                                    <div class="col-9">
                                        <select id="couponDropdown" class="form-control ">
                                            <option value="">Select Coupon</option>
                                            @if(Model.OrderHeader.CouponCode==null){
                                            @foreach (var coupon in validCoupons)
                                            {
                                                    <option class="mt-3 border-round  text-bg-light" value="@coupon.Code" data-discount-type="@coupon.Type" data-discount-value="@coupon.DiscountPercentage">
                                                    @coupon.Code -
                                                    @if (coupon.Type == Coupons.DiscountType.DiscountPercentage)
                                                    {
                                                        @coupon.DiscountPercentage <span>% off</span>
                                                    }
                                                    else if (coupon.Type == Coupons.DiscountType.DiscountAmount)
                                                    {
                                                        @coupon.DiscountAmount <span>Rs off</span>
                                                    }
                                                </option>
                                            }}
                                        </select>
                                        <div id="selectedCoupon" class="mt-2"></div>
                                        <div class="row mt-2">
                                            <div class="col-6">
                                                <button id="applyCouponBtn" class="btn btn-primary w-100">Apply Coupon</button>
                                            </div>
                                            <div class="col-6">
                                                <button type="submit" id="removeCouponBtn" class="btn btn-danger w-100" onclick="removeCoupon(event)">Remove Coupon</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                            <div class="row my-1 mt-3">
                                <div class="col-12 bg-light border">
                                    <select class="form-control" id="paymentMethodDropdown" required name="paymentMethod">
                                        <option value="">Select Payment Method</option>
                                        <option value="CashOnDelivery">Cash On Delivery</option>
                                        <option value="PayOnline">Pay Online</option>
                                    </select>

                                </div>
                            </div>
                            

                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <div class="row">
                    <div class="col-12 col-md-8 pt-2 mb-5 ">
                        <p style="color:maroon; font-size:14px;">
                            Estimate Arrival Date:
                        <p style="color:forestgreen">Delivery Expected within seven days(@DateTime.Now.AddDays(7).ToShortDateString() To @DateTime.Now.AddDays(14).ToShortDateString())</p>
                        </p>
                    </div>
                    <div class="col-12 col-md-4">
                        <button id="placeOrderBtn" type="submit" value="Place Order" class="btn btn-primary form-control">Place Order</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>


<script>
    document.getElementById("previousAddressDropdown").addEventListener("change", function () {
        var selectedAddress = this.options[this.selectedIndex].text;
        var addressComponents = selectedAddress.split(',').map(function (component) {
            return component.trim();
        });
        var elements = document.querySelectorAll('[data-address-field]');

        // Map field names to their corresponding index in the addressComponents array
        var fieldMapping = {
            "Name": 0,
            "PhoneNumber": 5,
            "StreetAddress": 1,
            "City": 2,
            "State": 3,
            "PostalCode": 4
        };

        // Populate fields
        elements.forEach(function (element) {
            var fieldName = element.dataset.addressField;
            var fieldValue = addressComponents[fieldMapping[fieldName]];
            if (fieldName === "PostalCode") {
                fieldValue = fieldValue.split(' ')[0]; // Extract postal code
            }
            element.value = fieldValue;
        });
    });

    document.getElementById("applyCouponBtn").addEventListener("click", function (event) {
        // Prevent the default form submission behavior
        event.preventDefault();

        // Get the selected coupon code from the dropdown
        var couponCode = document.getElementById("couponDropdown").value;

        // Check if a coupon is selected
        if (!couponCode) {
            alert("Please select a coupon before applying.");
            return;
        }

        $.ajax({
            type: "POST",
            url: "/Customer/ShoppingCart/ApplyCoupon",
            data: { couponCode: couponCode },
            success: function (response) {
                // Log the response to console for debugging
                console.log("Response from server:", response);

                // Update the order total displayed on the page
                var newOrderTotal = response.newOrderTotal;
                console.log("New order total:", newOrderTotal); // Log the new order total

                // Format the order total as currency using toLocaleString
                var formattedOrderTotal = parseFloat(newOrderTotal).toLocaleString('en-IN', { style: 'currency', currency: 'INR' });

                // Update the order total using ID selector
                $("#orderTotal").text(formattedOrderTotal);
            },
            error: function (xhr, status, error) {
                // Log error details to console for debugging
                console.error("Error applying coupon:", error);
            }
        });
    });

    document.getElementById("removeCouponBtn").addEventListener("click", function (event) {
        // Prevent the default form submission behavior
        event.preventDefault();
        $.ajax({
            type: "POST",
            url: "/Customer/ShoppingCart/RemoveCoupon",
            data: {},
           success: function (response) {
                // Log the response to console for debugging
                console.log("Response from server:", response);

                // Update the order total displayed on the page
                var newOrderTotal = response.newOrderTotal;
                console.log("New order total:", newOrderTotal); // Log the new order total

                // Format the order total as currency using toLocaleString
                var formattedOrderTotal = parseFloat(newOrderTotal).toLocaleString('en-IN', { style: 'currency', currency: 'INR' });

                // Update the order total using ID selector
                $("#orderTotal").text(formattedOrderTotal);
            },
            error: function (xhr, status, error) {
                // Log error details to console for debugging
                console.error("Error removing coupon:", error);
            }
        });
    });

    document.getElementById("placeOrderBtn").addEventListener("click", function (event) {
        // Prevent default form submission
        event.preventDefault();

        // Get the order total
        var orderTotal = parseFloat('@Model.OrderHeader.OrderTotal');
        var paymentMethod = document.getElementById("paymentMethodDropdown").value;

        // Check if a payment method is selected
        if (!paymentMethod) {
            alert("Please select a payment method before placing the order.");
            return;
        }


        // Allow the form to submit
        document.getElementById("checkoutForm").submit();


    });
</script>
